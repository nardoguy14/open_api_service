AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create an RDS instances.


Parameters:
  RdsPassword:
    Type: String
    NoEcho: true
  VpcId:
    Type: String
    NoEcho: false
    Default: vpc-0cb3bfa4e20df9a0b
  SubnetId1:
    Type: String
    NoEcho: false
    Default: subnet-0e344b84222462d0e
  SubnetId2:
    Type: String
    NoEcho: false
    Default: subnet-0852bbe71fdcaaa4d
  DbInstanceIdentifier:
    Type: String
    Default: nardos-db
  DbName:
    Type: String
    Default: nardos-db


Resources:

  RDSSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Security group for RDS instance'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: '0.0.0.0/0'

  RDSInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBInstanceIdentifier: !Ref DbInstanceIdentifier
      DBName: !Ref DbName
      MasterUsername: admin
      MasterUserPassword: !Ref RdsPassword
      DBInstanceClass: 'db.t3.micro'
      AllocatedStorage: '20'
      Engine: 'postgres'
      VPCSecurityGroups:
        - !Ref RDSSecurityGroup
      DBSubnetGroupName: !Ref RDSSubnetGroup
      MultiAZ: false
      PubliclyAccessible: true
      StorageType: 'gp2'

  RDSSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: 'Subnet group for RDS instance'
      SubnetIds:
        - !Ref  SubnetId1
        - !Ref  SubnetId2

Outputs:

  RDSInstanceEndpoint:
    Description: "The endpoint address of the RDS instance"
    Value: !GetAtt RDSInstance.Endpoint.Address

  RDSInstanceArn:
    Description: "The ARN of the RDS instance"
    Value: !Ref RDSInstance
