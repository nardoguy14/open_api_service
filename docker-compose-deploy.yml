version: '3.5'

services:

  minio:
    container_name: milvus_minio_embed_svc
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  attu:
    container_name: attu_svc
    image: zilliz/attu:v2.4
    ports:
      - "8000:3000"
    environment:
      MILVUS_URL: http://standalone:19530

  standalone:
    container_name: milvus_standalone_embed_svc
    image: milvusdb/milvus:v2.4.0
    command: ["milvus", "run", "standalone"]
    security_opt:
      - seccomp:unconfined
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "minio"

  rabbitmq:
    container_name: rabbitmq_embed_svc
    image: "rabbitmq:management"
    ports:
      - "5672:5672"
      - "15672:15672"
      - "2379:2379"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  embed_svc_apis:
    container_name: apis_embed_svc
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8009:8009"
    environment:
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_HOST: rabbitmq
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      MIVILUS_HOST: ${MIVILUS_HOST}
      MIVILUS_PORT: ${MIVILUS_PORT}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    depends_on:
      - standalone
      - selenium

  selenium:
    container_name: selenium_container
    image: "seleniarm/standalone-chromium:latest"
    ports:
      - "4444:4444"
      - "5900:5900"
      - "7900:7900"
    shm_size: '2gb'

  data_scrape_worker:
    build:
      context: .
      dockerfile: Dockerfile-datascrape-rabbitmq-consumer
    environment:
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_HOST: rabbitmq
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      MIVILUS_HOST: ${MIVILUS_HOST}
      MIVILUS_PORT: ${MIVILUS_PORT}
      OPENAI_API_KEY: ${OPENAI_API_KEY}]
      CONSUMER: 1
    depends_on:
      - rabbitmq
      - postgres
      - standalone

  embeddings_worker:
    image: python:3.12
    build:
      context: .
      dockerfile: Dockerfile-embeddings-rabbitmq-consumer
    environment:
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_HOST: rabbitmq
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      MIVILUS_HOST: ${MIVILUS_HOST}
      MIVILUS_PORT: ${MIVILUS_PORT}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      CONSUMER: 1
    depends_on:
      - rabbitmq
      - postgres
      - standalone

networks:
  default:
    name: milvus
    driver: bridge